name: Build and Push

on:
  push:
    branches: [main, test]
    # Publish semver tags as releases.
    tags: ["v*.*.*", "v*.*.*.*"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log into registry ${{ secrets.AZURECR_URL }}
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURECR_URL }}
          username: ${{ secrets.AZURECR_USERNAME }}
          password: ${{ secrets.AZURECR_PASSWORD }}

      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v5.1.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: "v"
          tag_template: "yyyy.mm.dd.i"

      - name: Extract Git Commit Hash
        id: git_commit_hash
        run: echo "commit_hash=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push app Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: .
          push: ${{ env.DOCKER_PUSH || 'true' }}
          tags: ${{ secrets.AZURECR_URL }}/traditional-knowledge:${{ steps.generate_release_tag.outputs.next_release_tag }} , ${{ secrets.AZURECR_URL }}/traditional-knowledge:latest
          build-args: |
            RELEASE_TAG=${{ steps.generate_release_tag.outputs.next_release_tag }}
            GIT_COMMIT_HASH=${{ steps.git_commit_hash.outputs.commit_hash }}

      - name: Build and push archiver Docker image
        uses: docker/build-push-action@v5.3.0
        with:
          context: ./archiver
          push: ${{ env.DOCKER_PUSH || 'true' }}
          tags: ${{ secrets.AZURECR_URL }}/traditional-knowledge-archiver:${{ steps.generate_release_tag.outputs.next_release_tag }} , ${{ secrets.AZURECR_URL }}/traditional-knowledge-archiver:latest
          build-args: |
            RELEASE_TAG=${{ steps.generate_release_tag.outputs.next_release_tag }}
            GIT_COMMIT_HASH=${{ steps.git_commit_hash.outputs.commit_hash }}
            SSL_PRIVATE_ICEFOG_PEM=${{ secrets.SSL_PRIVATE_ICEFOG_PEM }}
            SSL_CERT_FULLCHAIN_PEM=${{ secrets.SSL_CERT_FULLCHAIN_PEM }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.generate_release_tag.outputs.next_release_tag }}
